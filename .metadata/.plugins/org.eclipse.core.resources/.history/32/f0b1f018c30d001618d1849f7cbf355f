package project;

import java.util.HashMap;
import java.util.Random;

import lib.SubnetAddress;
import object.Network;

/**
 * Controller Instance
 * @author TAISHI
 *
 */
public class Controller {
	// maps tenantID to Network instance
	private HashMap<Long, Network> tenantMap;
	

	// Miscellaneous
	Random randomGen;
	
	
	public Controller() {
		// TODO Auto-generated constructor stub
		this.tenantMap = new HashMap<Long, Network>();
		this.randomGen = new Random();
	}
	
	
	
	/**
	 * Assigns available priavte address space for a subset.
	 * Should be called when a new subnet is created to assign
	 * the range of IP address
	 * @return SubnetAddress
	 */
	public SubnetAddress getAvailableSubnetAddr() {
		//TODO return available range of IP address as SubnetAddress instance
		return null;
	}
	
	/**
	 * Registers a new tenant
	 * @param network 
	 * @return tenant ID that was registered
	 */
	public long registerNewTenant(Network network) {
		//TODO return available tenant ID and register it to some data structure
		long tenantID;
		do {
			tenantID = randomGen.nextLong();
		} while (tenantMap.containsKey(tenantMkkk));
		return 0;
	}

}
