package object;

import java.net.Inet4Address;

import lib.VirtualNIC;

public class VirtualServer {
	public long serverID;
	
	// Constant
	private static final int DEFAULT_DISKSIZE = 4;
	private static final int DEFAULT_NUMCPU = 2;
	private static final int DEFAULT_MEM = 1024;
	

	public String serverName;
	private VirtualNIC dataNIC;
	private VirtualNIC controlNIC;		//need IP address???
	
	// Server config
	private int diskSize;
	private int numCpu;
	private int memSize;

	// Subnet to which this server belong
	private Subnet parentSubnet;
	
	
	
	
	//TODO I have no idea about ports!!!!
	
	public VirtualServer(Subnet parentSubnet, long serverID, String serverName) {
		this(parentSubnet, serverID, serverName, DEFAULT_DISKSIZE, DEFAULT_NUMCPU, DEFAULT_MEM);
	}
	
	public VirtualServer(Subnet parentSubnet, long serverID, String serverName, int diskSize, int numCpu, int memSize) {
		this.parentSubnet = parentSubnet;
		this.serverID = serverID;
		this.serverName = serverName;
		this.diskSize = diskSize;
		this.numCpu = numCpu;
		this.memSize = memSize;
		
		//TODO configuration of virtual NIC
		this.dataNIC = new VirtualNIC();
		this.controlNIC = new VirtualNIC();
	}

	
	/**
	 * Assigns an IP address to data NIC. Should be called when dealing with DHCP
	 * @param address
	 */
	public void assignDataIPAddr(Inet4Address address) {
		//TODO error handling
		this.dataNIC.assignIPAddr(address);
	}
	
	
	/**
	 * Creates a virtual machine using create_server.sh script
	 * 
	 * # create_server.sh : script to create a virtual server using Ubuntu 14.04 cloud image on kvm
	 *	 Usage:
	 *		# ./create_server.sh host domain disksize numcpu mem network metadata userdata
	 *	 * host: the hostname of the server (needs to be unique) == serverName
	 *	 * domain: the domain name in which the server is created
	 *	 * disksize: the disk size for the server in GB
	 *	 * numcpu: the number of CPUs allocated for the server
	 *	 * mem: the amount of memory allocated for the server in MB
	 *	 * network: the network configuration (VNIC) with no space
	 *	 * metadata: the location of meta-data file
	 *	 * userdata: the location of user-data file
	 *
	 *	@exception when error creating a virtual machine
	 */
	public void createVirtualMachine() throws Exception {
		String domainName = parentSubnet.domainName;
		
		//TODO error checking on arguments for script
		
		ProcessBuilder pb = new ProcessBuilder();
		
		
		
		
	}
	


}
